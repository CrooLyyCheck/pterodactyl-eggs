{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-04-24T19:47:30+02:00",
    "name": "Feed The Beast - CrooLyyCheck",
    "author": "croolyycheck@example.com",
    "description": "Egg made around official ftb install script (https:\/\/github.com\/FTBTeam\/FTB-Server-Installer)\r\nEmail for contact in \"author\" field is fake, find me on discord: croolyycheck",
    "features": [
        "eula",
        "java_version",
        "pid_limit"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/pterodactyl\/yolks:java_21",
        "Java 8": "ghcr.io\/pterodactyl\/yolks:java_8",
        "Java 11": "ghcr.io\/pterodactyl\/yolks:java_11",
        "Java 16": "ghcr.io\/pterodactyl\/yolks:java_16",
        "Java 17": "ghcr.io\/pterodactyl\/yolks:java_17",
        "Java 18": "ghcr.io\/pterodactyl\/yolks:java_18"
    },
    "file_denylist": [],
    "startup": ".\/run.sh",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\",\r\n            \"query.port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \")! For help, type \"\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# FTB pterodactyl script made by CrooLyyCheck for Official Install Script\r\n# Made with human brain with alot AI help (its my first egg)\r\n\r\nSERVER_DIR=\"\/mnt\/server\"\r\nAPI_BASE=\"https:\/\/api.feed-the-beast.com\/v1\/modpacks\/public\/modpack\"\r\n\r\nfunction validate_input {\r\n    if [ -z \"${FTB_PACK_ID}\" ] || [ -z \"${FTB_PACK_VERSION_ID}\" ]; then\r\n        echo \"ERROR: You must set FTB_PACK_ID and FTB_PACK_VERSION_ID!\"\r\n        exit 1\r\n    fi\r\n}\r\n\r\nfunction install_dependencies {\r\n    apt update\r\n    apt install -y curl unzip jq\r\n}\r\n\r\nfunction get_installer_url {\r\n    ARCH=$([ \"$(uname -m)\" == \"x86_64\" ] && echo \"linux\" || echo \"arm\/linux\")\r\n    INSTALLER_URL=\"${API_BASE}\/${FTB_PACK_ID}\/${FTB_PACK_VERSION_ID}\/server\/${ARCH}\"\r\n    \r\n    # Checking if URL exist\r\n    if ! curl --output \/dev\/null --silent --head --fail \"$INSTALLER_URL\"; then\r\n        echo \"ERROR: Invalid installer URL! Please check the pack and version ID.\"\r\n        exit 1\r\n    fi\r\n    \r\n    echo \"$INSTALLER_URL\"\r\n}\r\n\r\nfunction run_installation {\r\n    INSTALLER_URL=$(get_installer_url)\r\n    echo \"Pobieranie instalatora z: ${INSTALLER_URL}\"\r\n    \r\n    curl -L -o serversetup \"${INSTALLER_URL}\" || {\r\n        echo \"B\u0141\u0104D: Nie uda\u0142o si\u0119 pobra\u0107 instalatora!\"\r\n        exit 1\r\n    }\r\n    \r\n    chmod +x serversetup\r\n    \r\n    # We define a regular expression for integers.\r\n    re='^[0-9]+$'\r\n    \r\n    # We are creating a table with the basic parameters.\r\n    params=(-verbose -auto -force -no-java -pack \"${FTB_PACK_ID}\")\r\n    \r\n    # We add the -version parameter only when the variable is an integer.\r\n    if [[ ${FTB_PACK_VERSION_ID} =~ $re ]]; then\r\n        params+=(-version \"${FTB_PACK_VERSION_ID}\")\r\n        echo \"Starting with version number: ${FTB_PACK_VERSION_ID}\"\r\n    else\r\n        echo \"Omitting the -version parameter because the value '${FTB_PACK_VERSION_ID}' it is not an integer.\"\r\n    fi\r\n    \r\n    # We launch the installer with the prepared parameters.\r\n    .\/serversetup \"${params[@]}\" || {\r\n        echo \"ERROR: Installation failed!\"\r\n        exit 1\r\n    }\r\n}\r\n\r\nfunction clean {\r\n    # Removing official install script\r\n    rm -f serversetup\r\n}\r\n\r\n# G\u0142\u00f3wny proces (little easter egg, idk what ai mean by adding this comment)\r\ncd \"${SERVER_DIR}\" || exit 1\r\nvalidate_input\r\ninstall_dependencies\r\nrun_installation\r\nclean\r\n\r\n# Replace user_jvm_args.txt with standard pterodactyl args\r\ncat > user_jvm_args.txt << 'EOF'\r\n-Dlog4j2.formatMsgNoLookups=true\r\n-XX:MaxRAMPercentage=95.0\r\n-Dterminal.jline=false\r\n-Dterminal.ansi=true\r\nEOF\r\n\r\necho \"eula=${EULA}\" > eula.txt\r\necho \"File eula.txt was created\/replaced with content: eula=${EULA}\"\r\necho \"Installation complete! Press start button to launch.\"\r\n\r\necho \"${BOLD}${YELLOW}Remember to choose the right java version container! Older modpacks mostly can run only with java 8.\"",
            "container": "openjdk:8-jdk-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "FTB Pack ID",
            "description": "You can find it in Developer \/ Server Admin section at https:\/\/www.feed-the-beast.com of the modpack page",
            "env_variable": "FTB_PACK_ID",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "FTB Version ID",
            "description": "You can find it in Developer \/ Server Admin section at https:\/\/www.feed-the-beast.com of the modpack page",
            "env_variable": "FTB_PACK_VERSION_ID",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}